##This is based on Mining of Massive DatasetsMining of Massive Datasets by Jure Leskovec
##The purpose is to calculate Jaccard similarity between all docNum documents based the signature matrix,
##generated by d random hash functions. The results are saved into file. 
##Input sign_mat_np is a numpy matrix of signature 

def hash_sim(sign_mat_np,d,docNum):
    #use list to calculate save much more time than np matrix
    sign_mat=sign_mat_np.tolist()
	
    file_name = "minhash_sim_"+str(d)+".txt"
	
    sim_sum = 0
	
    result = open(file_name, "w")
	
    for i in range(docNum):
        for j in range(i+1, docNum):
            count = 0
            for k in range(d):
                count += sign_mat[k][i] == sign_mat[k][j]
            sim_sum += count /d
            result.write(str(count/d) + " ")
    result.close()
	
    print("The average Jaccard Similarity for d =" + str(d)+ " is " + str(sim_sum/sum(list(range(docNum)))))
